{"ast":null,"code":"var _jsxFileName = \"/Users/sofi/Desktop/IdeaTheorem-2/registration-form/src/RegistrationForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Alert, InputGroup } from 'react-bootstrap';\nimport './RegistrationForm.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport logo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar navbar-expand-lg navbar-dark bg-dark\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"navbar-brand\",\n        href: \"#\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"Logo\",\n          width: \"200\",\n          height: \"100\",\n          className: \"d-inline-block align-text-top me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = Header;\nfunction validateForm(fullName, contactNumber, email, day, month, year, password, confirmPassword) {\n  let isValid = true;\n  if (!fullName || fullName.trim().length === 0 || /\\W/.test(fullName)) {\n    isValid = false;\n  }\n  if (!contactNumber || !/\\d{3}-\\d{3}-\\d{4}/.test(contactNumber)) {\n    isValid = false;\n  }\n  if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n    isValid = false;\n  }\n  if (!day || !month || !year) {\n    isValid = false;\n  }\n  if (!password || !/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}/.test(password)) {\n    isValid = false;\n  }\n  if (password !== confirmPassword) {\n    isValid = false;\n  }\n  return isValid;\n}\nconst RegistrationForm = () => {\n  _s();\n  // State variables for form fields\n  const [fullName, setFullName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [day, setDay] = useState('');\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  // State variables for form validation and API response\n  const [validated, setValidated] = useState(false);\n  const [alertVariant, setAlertVariant] = useState('');\n  const [alertMessage, setAlertMessage] = useState('');\n\n  // Event handlers for form fields\n  const handleFullNameChange = event => {\n    const value = event.target.value;\n    setFullName(value);\n    // Check if full name is valid and update isInvalid state accordingly\n    if (!value.trim() || /\\W/.test(value)) {\n      setIsInvalid(true);\n    } else {\n      setIsInvalid(false);\n    }\n  };\n  const handleContactNumberChange = event => {\n    const value = event.target.value.replace(/[^\\d]/g, '');\n    let formattedValue = '';\n    if (value.length > 0) {\n      formattedValue = value.slice(0, 3);\n      if (value.length >= 4) {\n        formattedValue += '-' + value.slice(3, 6);\n      }\n      if (value.length >= 7) {\n        formattedValue += '-' + value.slice(6, 10);\n      }\n    }\n    setContactNumber(formattedValue);\n  };\n  const handleEmailChange = event => {\n    const input = event.target;\n\n    // check if input is empty and set isInvalid state accordingly\n    if (input.id === 'email' && !/\\S+@\\S+\\.\\S+/.test(input.value)) {\n      setIsInvalid(true);\n    } else {\n      setIsInvalid(false);\n    }\n    setEmail(event.target.value);\n  };\n  const handleDayChange = event => setDay(event.target.value);\n  const handleMonthChange = event => setMonth(event.target.value);\n  const handleYearChange = event => setYear(event.target.value);\n  const handlePasswordChange = event => setPassword(event.target.value);\n  const handleConfirmPasswordChange = event => setConfirmPassword(event.target.value);\n  const [isInvalid, setIsInvalid] = useState({\n    fullName: false,\n    contactNumber: false,\n    email: false,\n    day: false,\n    month: false,\n    year: false,\n    password: false,\n    confirmPassword: false\n  });\n\n  // handle click event on form fields\n  const handleClick = event => {\n    const input = event.target;\n    const fieldId = input.id;\n\n    // check if input is empty and set isInvalid state accordingly\n    if (!input.value.trim()) {\n      // check if input is empty and set isInvalid state accordingly for the specific field\n      switch (fieldId) {\n        case 'fullName':\n          setIsInvalid({\n            ...isInvalid,\n            fullName: true\n          });\n          break;\n        case 'contactNumber':\n          setIsInvalid({\n            ...isInvalid,\n            contactNumber: true\n          });\n          break;\n        case 'email':\n          setIsInvalid({\n            ...isInvalid,\n            email: true\n          });\n          break;\n        case 'day':\n          setIsInvalid({\n            ...isInvalid,\n            day: true\n          });\n          break;\n        case 'month':\n          setIsInvalid({\n            ...isInvalid,\n            month: true\n          });\n          break;\n        case 'year':\n          setIsInvalid({\n            ...isInvalid,\n            year: true\n          });\n          break;\n        case 'password':\n          setIsInvalid({\n            ...isInvalid,\n            password: true\n          });\n          break;\n        case 'confirmPassword':\n          setIsInvalid({\n            ...isInvalid,\n            confirmPassword: true\n          });\n          break;\n        default:\n          break;\n      }\n    } else {\n      switch (fieldId) {\n        case 'fullName':\n          setIsInvalid({\n            ...isInvalid,\n            fullName: false\n          });\n          break;\n        case 'contactNumber':\n          setIsInvalid({\n            ...isInvalid,\n            contactNumber: false\n          });\n          break;\n        case 'email':\n          setIsInvalid({\n            ...isInvalid,\n            email: false\n          });\n          break;\n        case 'day':\n          setIsInvalid({\n            ...isInvalid,\n            day: false\n          });\n          break;\n        case 'month':\n          setIsInvalid({\n            ...isInvalid,\n            month: false\n          });\n          break;\n        case 'year':\n          setIsInvalid({\n            ...isInvalid,\n            year: false\n          });\n          break;\n        case 'password':\n          setIsInvalid({\n            ...isInvalid,\n            password: false\n          });\n          break;\n        case 'confirmPassword':\n          setIsInvalid({\n            ...isInvalid,\n            confirmPassword: false\n          });\n          break;\n        default:\n          break;\n      }\n    }\n  };\n\n  // Form submission handler\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const isValid = validateForm(fullName, contactNumber, email, day, month, year, password, confirmPassword);\n    if (false) {\n      event.stopPropagation();\n      toast.error(\"There was an error creating the account.\", {\n        position: \"top-right\",\n        className: 'toast-message',\n        hideProgressBar: true\n      });\n      return;\n    } else {\n      // Send API request to create new user account and display toast message\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          full_name: fullName,\n          contact_number: contactNumber,\n          email: email,\n          date_of_birth: `${day} ${month} ${year}`,\n          password: password,\n          confirm_password: confirmPassword\n        })\n      };\n      fetch('https://fullstack-test-navy.vercel.app/api/users/create', requestOptions).then(response => response.json()).then(data => {\n        // Display alert message based on API response\n        console.log(data.title);\n        if (data.title === 'Success') {\n          toast.success(\"User account successfully created.\", {\n            position: \"top-right\",\n            className: 'success',\n            hideProgressBar: true\n          });\n          setAlertVariant('success');\n          setAlertMessage(data.message);\n        }\n        if (data.success) {\n          toast.success(\"User account successfully created.\", {\n            position: \"top-right\",\n            className: 'success',\n            hideProgressBar: true\n          });\n          setAlertVariant('success');\n          setAlertMessage(data.message);\n        } else {\n          if (data.title === 'Registration Error') {\n            setAlertVariant('danger');\n            setAlertMessage(data.message);\n            toast.error(\"There was an error creating the account.\", {\n              position: \"top-right\",\n              className: 'toast-message',\n              hideProgressBar: true\n            });\n          }\n        }\n      }).catch(error => {\n        setAlertVariant('danger');\n        setAlertMessage('An error occurred while processing your request.');\n        toast.error(\"There was an error creating the account.\", {\n          position: \"top-right\",\n          className: 'toast-message',\n          hideProgressBar: true\n        });\n      });\n    }\n    setValidated(true);\n  };\n\n  // Cancel form submission handler\n  const handleCancel = () => {\n    setFullName('');\n    setContactNumber('');\n    setEmail('');\n    setDay('');\n    setMonth('');\n    setYear('');\n    setPassword('');\n    setConfirmPassword('');\n    setValidated(false);\n    setAlertVariant('');\n    setAlertMessage('');\n  };\n  const days = [];\n  for (let i = 1; i <= 31; i++) {\n    days.push(i);\n  }\n  const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  const currentYear = new Date().getFullYear();\n  const years = [];\n  for (let i = currentYear; i >= currentYear - 100; i--) {\n    years.push(i);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Create User Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RegistrationForm\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        noValidate: true,\n        validated: validated,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"fullName\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"text\",\n            placeholder: \"Enter full name\",\n            value: fullName,\n            onChange: handleFullNameChange,\n            onClick: handleClick,\n            isInvalid: isInvalid.fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please enter your full name.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter email\",\n            value: email,\n            onChange: handleEmailChange,\n            onClick: handleClick,\n            isInvalid: isInvalid.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Please enter a valid email address.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"contactNumber\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Contact Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              required: true,\n              type: \"tel\",\n              placeholder: \"555-555-5555\",\n              pattern: \"[0-9]{3}-[0-9]{3}-[0-9]{4}\",\n              value: contactNumber,\n              onChange: handleContactNumberChange,\n              onClick: handleClick,\n              isInvalid: isInvalid.contactNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n              type: \"invalid\",\n              children: \"Please enter a valid Canadian phone number.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"dateOfBirth\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                as: \"select\",\n                value: day,\n                onChange: handleDayChange,\n                onClick: handleClick,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 9\n                }, this), days.map(day => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: day,\n                  children: day\n                }, day, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 11\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please select a valid day.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                as: \"select\",\n                value: month,\n                onChange: handleMonthChange,\n                onClick: handleClick,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Month\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 9\n                }, this), months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: month,\n                  children: month\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 11\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please select a valid month.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                required: true,\n                as: \"select\",\n                value: year,\n                onChange: handleYearChange,\n                onClick: handleClick,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Year\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 9\n                }, this), years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: year,\n                  children: year\n                }, year, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 11\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                type: \"invalid\",\n                children: \"Please select a valid year.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            placeholder: \"Enter password\",\n            value: password,\n            onChange: handlePasswordChange,\n            onClick: handleClick,\n            pattern: \"^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"confirmPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"password\",\n            placeholder: \"Confirm password\",\n            value: confirmPassword,\n            onChange: handleConfirmPasswordChange,\n            onClick: handleClick,\n            pattern: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"Passwords do not match.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 7\n      }, this), alertMessage && /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"mt-3\",\n        variant: alertVariant,\n        children: alertMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-cancel\",\n        variant: \"secondary\",\n        type: \"button\",\n        onClick: handleCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-submit\",\n        variant: \"primary\",\n        type: \"submit\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 352,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistrationForm, \"mBKLC4NZ+GwHV5K09kZxYt9+AdY=\");\n_c2 = RegistrationForm;\nexport default RegistrationForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"RegistrationForm\");","map":{"version":3,"names":["React","useState","Form","Button","Alert","InputGroup","ToastContainer","toast","logo","jsxDEV","_jsxDEV","Header","className","children","href","src","alt","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","validateForm","fullName","contactNumber","email","day","month","year","password","confirmPassword","isValid","trim","length","test","RegistrationForm","_s","setFullName","setContactNumber","setEmail","setDay","setMonth","setYear","setPassword","setConfirmPassword","validated","setValidated","alertVariant","setAlertVariant","alertMessage","setAlertMessage","handleFullNameChange","event","value","target","setIsInvalid","handleContactNumberChange","replace","formattedValue","slice","handleEmailChange","input","id","handleDayChange","handleMonthChange","handleYearChange","handlePasswordChange","handleConfirmPasswordChange","isInvalid","handleClick","fieldId","handleSubmit","preventDefault","form","currentTarget","stopPropagation","error","position","hideProgressBar","requestOptions","method","headers","body","JSON","stringify","full_name","contact_number","date_of_birth","confirm_password","fetch","then","response","json","data","console","log","title","success","message","catch","handleCancel","days","i","push","months","currentYear","Date","getFullYear","years","noValidate","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","onClick","Feedback","pattern","as","map","index","variant","_c2","$RefreshReg$"],"sources":["/Users/sofi/Desktop/IdeaTheorem-2/registration-form/src/RegistrationForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Alert, InputGroup } from 'react-bootstrap';\nimport './RegistrationForm.css';\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport logo from './logo.png';\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"#\">\n          <img src={logo} alt=\"Logo\" width=\"200\" height=\"100\" className=\"d-inline-block align-text-top me-2\" />\n        </a>\n      </div>\n    </nav>\n  );\n}\n\nfunction validateForm(fullName, contactNumber, email, day, month, year, password, confirmPassword) {\n  let isValid = true;\n\n  if (!fullName || fullName.trim().length === 0 || /\\W/.test(fullName)) {\n    isValid = false;\n  }\n\n  if (!contactNumber || !/\\d{3}-\\d{3}-\\d{4}/.test(contactNumber)) {\n    isValid = false;\n  }\n\n  if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\n    isValid = false;\n  }\n\n  if (!day || !month || !year) {\n    isValid = false;\n  }\n\n  if (!password || !/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}/.test(password)) {\n    isValid = false;\n  }\n\n  if (password !== confirmPassword) {\n    isValid = false;\n  }\n\n  return isValid;\n}\n\n\n\nconst RegistrationForm = () => {\n  // State variables for form fields\n  const [fullName, setFullName] = useState('');\n  const [contactNumber, setContactNumber] = useState('');\n  const [email, setEmail] = useState('');\n  const [day, setDay] = useState('');\n  const [month, setMonth] = useState('');\n  const [year, setYear] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  // State variables for form validation and API response\n  const [validated, setValidated] = useState(false);\n  const [alertVariant, setAlertVariant] = useState('');\n  const [alertMessage, setAlertMessage] = useState('');\n\n  // Event handlers for form fields\n  const handleFullNameChange = (event) => {\n\n    const value = event.target.value;\n    setFullName(value);\n    // Check if full name is valid and update isInvalid state accordingly\n  if (!value.trim() || /\\W/.test(value)) {\n    setIsInvalid(true);\n  } else {\n    setIsInvalid(false);\n  }\n  };\n  const handleContactNumberChange = (event) => {\n    const value = event.target.value.replace(/[^\\d]/g, '');\n    let formattedValue = '';\n  \n    if (value.length > 0) {\n      formattedValue = value.slice(0, 3);\n  \n      if (value.length >= 4) {\n        formattedValue += '-' + value.slice(3, 6);\n      }\n  \n      if (value.length >= 7) {\n        formattedValue += '-' + value.slice(6, 10);\n      }\n    }\n  \n    setContactNumber(formattedValue);\n  };\n  const handleEmailChange = (event) => {\n    const input = event.target;\n\n  // check if input is empty and set isInvalid state accordingly\n  if (input.id === 'email' && !/\\S+@\\S+\\.\\S+/.test(input.value)) {\n    setIsInvalid(true);\n  } else {\n    setIsInvalid(false);\n  }\n    setEmail(event.target.value);};\n  const handleDayChange = (event) => setDay(event.target.value);\n  const handleMonthChange = (event) => setMonth(event.target.value);\n  const handleYearChange = (event) => setYear(event.target.value);\n  const handlePasswordChange = (event) => setPassword(event.target.value);\n  const handleConfirmPasswordChange = (event) =>\n    setConfirmPassword(event.target.value);\n\n\n  const [isInvalid, setIsInvalid] = useState({\n    fullName: false,\n    contactNumber: false,\n    email: false,\n    day: false,\n    month: false,\n    year: false,\n    password: false,\n    confirmPassword: false\n  });\n\n  // handle click event on form fields\n  const handleClick = (event) => {\n  const input = event.target;\n  const fieldId = input.id;\n    \n  // check if input is empty and set isInvalid state accordingly\n  if (!input.value.trim()) {\n    \n  \n    // check if input is empty and set isInvalid state accordingly for the specific field\n    switch (fieldId) {\n      case 'fullName':\n        setIsInvalid({\n          ...isInvalid,\n          fullName: true\n        });\n        break;\n      case 'contactNumber':\n        setIsInvalid({\n          ...isInvalid,\n          contactNumber: true\n        });\n        break;\n      case 'email':\n        setIsInvalid({\n          ...isInvalid,\n          email: true\n        });\n        break;\n      case 'day':\n        setIsInvalid({\n          ...isInvalid,\n          day: true\n        });\n        break;\n      case 'month':\n        setIsInvalid({\n          ...isInvalid,\n          month: true\n        });\n        break;\n      case 'year':\n        setIsInvalid({\n          ...isInvalid,\n          year: true\n        });\n        break;\n      case 'password':\n        setIsInvalid({\n          ...isInvalid,\n          password: true\n        });\n        break;\n      case 'confirmPassword':\n        setIsInvalid({\n          ...isInvalid,\n          confirmPassword: true\n        });\n        break;\n      default:\n        break;\n    }\n  } else {\n    switch (fieldId) {\n      case 'fullName':\n        setIsInvalid({\n          ...isInvalid,\n          fullName: false\n        });\n        break;\n      case 'contactNumber':\n        setIsInvalid({\n          ...isInvalid,\n          contactNumber: false\n        });\n        break;\n      case 'email':\n        setIsInvalid({\n          ...isInvalid,\n          email: false\n        });\n        break;\n      case 'day':\n        setIsInvalid({\n          ...isInvalid,\n          day: false\n        });\n        break;\n      case 'month':\n        setIsInvalid({\n          ...isInvalid,\n          month: false\n        });\n        break;\n      case 'year':\n        setIsInvalid({\n          ...isInvalid,\n          year: false\n        });\n        break;\n      case 'password':\n        setIsInvalid({\n          ...isInvalid,\n          password: false\n        });\n        break;\n      case 'confirmPassword':\n        setIsInvalid({\n          ...isInvalid,\n          confirmPassword: false\n        });\n        break;\n      default:\n        break;\n    }\n  }\n};\n\n  // Form submission handler\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const isValid = validateForm(fullName, contactNumber, email, day, month, year, password, confirmPassword);\n    \n\n    if (false) {\n      event.stopPropagation();\n      toast.error(\"There was an error creating the account.\", {\n        position: \"top-right\",\n        className: 'toast-message',\n        hideProgressBar: true\n     });\n     return;\n    } else {\n      // Send API request to create new user account and display toast message\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          full_name: fullName,\n          contact_number: contactNumber,\n          email: email,\n          date_of_birth: `${day} ${month} ${year}`,\n          password: password,\n          confirm_password: confirmPassword\n        }),\n      };\n\n      fetch('https://fullstack-test-navy.vercel.app/api/users/create', requestOptions)\n        .then((response) => response.json())\n        .then((data) => {\n          // Display alert message based on API response\n          console.log(data.title);\n          if (data.title === 'Success') {\n            toast.success(\"User account successfully created.\", {\n              position: \"top-right\",\n            className: 'success',\n            hideProgressBar: true\n            });\n            setAlertVariant('success');\n            setAlertMessage(data.message);\n        }\n          if (data.success) {\n            toast.success(\"User account successfully created.\", {\n              position: \"top-right\",\n            className: 'success',\n            hideProgressBar: true\n            });\n            setAlertVariant('success');\n            setAlertMessage(data.message);\n          } else {\n            if(data.title === 'Registration Error') {\n            setAlertVariant('danger');\n            setAlertMessage(data.message);\n            toast.error(\"There was an error creating the account.\", {\n               position: \"top-right\",\n               className: 'toast-message',\n               hideProgressBar: true\n            });\n          }\n        }\n        })\n        .catch((error) => {\n          setAlertVariant('danger');\n          setAlertMessage('An error occurred while processing your request.');\n          toast.error(\"There was an error creating the account.\", {\n            position: \"top-right\",\n            className: 'toast-message',\n            hideProgressBar: true\n         });\n        });\n    }\n\n    setValidated(true);\n  };\n\n  // Cancel form submission handler\n  const handleCancel = () => {\n    setFullName('');\n    setContactNumber('');\n    setEmail('');\n    setDay('');\n    setMonth('');\n    setYear('');\n    setPassword('');\n    setConfirmPassword('');\n    setValidated(false);\n    setAlertVariant('');\n    setAlertMessage('');\n  };\n\nconst days = [];\nfor (let i = 1; i <= 31; i++) {\n  days.push(i);\n}\n\nconst months = [  'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',  'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',];\n\nconst currentYear = new Date().getFullYear();\nconst years = [];\nfor (let i = currentYear; i >= currentYear - 100; i--) {\n  years.push(i);\n}\n\n  return (\n    <div>\n      <Header />\n      <ToastContainer />\n      <div className=\"form-header\">\n          <h3>Create User Account</h3>\n        </div>\n    <div className='RegistrationForm'>\n      \n      <Form noValidate validated={validated} onSubmit={handleSubmit}>\n        <Form.Group controlId='fullName'>\n          <Form.Label>Full Name</Form.Label>\n          <Form.Control\n            required\n            type='text'\n            placeholder='Enter full name'\n            value={fullName}\n            onChange={handleFullNameChange}\n            onClick={handleClick}\n            isInvalid={isInvalid.fullName}\n          />\n          <Form.Control.Feedback type='invalid'>\n            Please enter your full name.\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group controlId='email'>\n      <Form.Label>Email</Form.Label>\n      <Form.Control\n        required\n        type='email'\n        placeholder='Enter email'\n        value={email}\n        onChange={handleEmailChange}\n        onClick={handleClick}\n        isInvalid={isInvalid.email}\n      />\n      <Form.Control.Feedback type='invalid'>\n        Please enter a valid email address.\n      </Form.Control.Feedback>\n    </Form.Group>\n    <Form.Group controlId='contactNumber'>\n  <Form.Label>Contact Number</Form.Label>\n  <InputGroup>\n    \n    <Form.Control\n      required\n      type='tel'\n      placeholder='555-555-5555'\n      pattern='[0-9]{3}-[0-9]{3}-[0-9]{4}'\n      value={contactNumber}\n      onChange={handleContactNumberChange}\n      onClick={handleClick}\n      isInvalid={isInvalid.contactNumber}\n    />\n    <Form.Control.Feedback type='invalid'>\n      Please enter a valid Canadian phone number.\n    </Form.Control.Feedback>\n  </InputGroup>\n</Form.Group>\n<Form.Group controlId='dateOfBirth'>\n  <Form.Label>Date of Birth</Form.Label>\n  <div className='row'>\n    <div className='col'>\n      <Form.Control\n        required\n        as='select'\n        value={day}\n        onChange={handleDayChange}\n        onClick={handleClick}\n      >\n        <option value=''>Day</option>\n        {days.map((day) => (\n          <option key={day} value={day}>\n            {day}\n          </option>\n        ))}\n      </Form.Control>\n      <Form.Control.Feedback type='invalid'>\n        Please select a valid day.\n      </Form.Control.Feedback>\n    </div>\n    <div className='col'>\n      <Form.Control\n        required\n        as='select'\n        value={month}\n        onChange={handleMonthChange}\n        onClick={handleClick}\n      >\n        <option value=''>Month</option>\n        {months.map((month, index) => (\n          <option key={index} value={month}>\n            {month}\n          </option>\n        ))}\n      </Form.Control>\n      <Form.Control.Feedback type='invalid'>\n        Please select a valid month.\n      </Form.Control.Feedback>\n    </div>\n    <div className='col'>\n      <Form.Control\n        required\n        as='select'\n        value={year}\n        onChange={handleYearChange}\n        onClick={handleClick}\n      >\n        <option value=''>Year</option>\n        {years.map((year) => (\n          <option key={year} value={year}>\n            {year}\n          </option>\n        ))}\n      </Form.Control>\n      <Form.Control.Feedback type='invalid'>\n        Please select a valid year.\n      </Form.Control.Feedback>\n    </div>\n  </div>\n</Form.Group>\n\n    <Form.Group controlId='password'>\n      <Form.Label>Password</Form.Label>\n      <Form.Control\n        required\n        type='password'\n        placeholder='Enter password'\n        value={password}\n        onChange={handlePasswordChange}\n        onClick={handleClick}\n        pattern='^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$'\n      />\n      <Form.Control.Feedback type='invalid'>\n        Password must be at least 8 characters and contain at least one uppercase letter, one lowercase letter, and one number.\n      </Form.Control.Feedback>\n    </Form.Group>\n    <Form.Group controlId='confirmPassword'>\n      <Form.Label>Confirm Password</Form.Label>\n      <Form.Control\n        required\n        type='password'\n        placeholder='Confirm password'\n        value={confirmPassword}\n        onChange={handleConfirmPasswordChange}\n        onClick={handleClick}\n        pattern={password}\n      />\n      <Form.Control.Feedback type='invalid'>\n        Passwords do not match.\n      </Form.Control.Feedback>\n    </Form.Group>\n    \n  </Form>\n  {alertMessage && (\n    <Alert className='mt-3' variant={alertVariant}>\n      {alertMessage}\n    </Alert>\n  )}\n  \n</div>\n<div className=\"button\">\n    <Button className=\"btn-cancel\" variant='secondary' type='button' onClick={handleCancel}>\n          Cancel\n        </Button>\n        <Button className=\"btn-submit\" variant='primary' type='submit'onClick={handleSubmit}>\n      Submit\n    </Button>\n        </div>\n</div>\n);\n};\n\nexport default RegistrationForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}